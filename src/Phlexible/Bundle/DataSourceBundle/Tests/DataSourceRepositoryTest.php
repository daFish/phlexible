<?php

/**
 * Test class for MWF_Core_DataSources_GarbageCollector.
 * Generated by PHPUnit on 2010-01-15 at 11:42:21.
 */
class MWF_Core_DataSources_RepositoryTest extends PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * create() should return datasource object
     */
    public function testCreateShouldReturnDataSourceObject()
    {
        // SETUP
        $repository = $this->createRepository();

        // EXERCISE
        $dataSource = $repository->create();

        // VERIFY
        $this->assertTrue(
            $dataSource instanceof MWF_Core_DataSources_DataSource,
            'Created object is not an instance of MWF_Core_DataSources_DataSource'
        );
    }

    /**
     * getDataSourceById() should return newly created object
     */
    public function testGetDataSourceByIdShouldReturnNewlyCreatedObject()
    {
        // SETUP
        $id = Brainbits_Util_Uuid::generate();

        $dataMapper = $this->createDataMapperMock();
        $repository = $this->createRepository($dataMapper);

        // EXERCISE
        $dataSource = $repository->getDataSourceById($id, 'de');

        // VERIFY


        // TEARDOWN
    }

    /**
     * Create a repository.
     *
     * @return MWF_Core_DataSources_Repository
     */
    public function createRepository()
    {
        $dataMapper = $this->createDataMapperMock();
        $repository = new MWF_Core_DataSources_Repository($dataMapper);

        return $repository;
    }

    /**
     * Create a mocked data mapper.
     */
    public function createDataMapperMock()
    {
        $dataMapper = $this->getMock(
            'MWF_Core_DataSources_DataMapper_Database', // class to mock
            array(), // methods
            array(), // arguments
            '', // mock class name
            false // call original constructor
        );

        return $dataMapper;
    }

}
